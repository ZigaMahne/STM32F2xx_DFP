<?xml version="1.0" encoding="UTF-8"?>
<package schemaVersion="1.7.36" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.36/schema/PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32F2xx_DFP</name>
  <description overview="Documents/OVERVIEW.md">STMicroelectronics STM32F2 Series Device Support</description>
  <url>https://www.keil.com/pack/</url>
  <repository type="git">https://github.com/Open-CMSIS-Pack/STM32F2xx_DFP.git</repository>
  <license>LICENSE</license>
  <licenseSets>
    <licenseSet id="all" default="true" gating="true">
      <license title="Apache-2.0 License for CMSIS add-ons" name="LICENSE" spdx="Apache-2.0"/>
    </licenseSet>
  </licenseSets>

  <releases>
    <release version="3.0.1-dev">
      Active development ...
      Updated debug configuration files
      Updated Templates:
      - Added DWARF-5 debug information
      - Added generated output files
    </release>
    <release version="2.11.0" date="2024-03-27">
      Updated STM32Cube FW to STM32Cube_FW_F2_V1.9.4 (HAL V1.2.8).
      Device Support:
      - Added STM32F205RGEx device variant.
      - Added STM32F205, STM32F207 SVD files.
      Board Examples:
      - Updated to STM32Cube_FW_F2_V1.9.4
      - Updated to fixed pack versions
      CMSIS-Driver:
      - USART:
      -- Corrected capabilities with CTS change event not supported.
      -- Corrected Uninitialize function to power off the peripheral if it is powered.
      -- Corrected PowerControl function to return error if Initialize was not called
         and clear transfer information when powered off.
      -- Corrected Send function to not start reception in Synchronous Master mode
         and clear Transmission Complete status before starting Tx transfer (in DMA mode).
      -- Corrected GetTxCount to return 0 if send was not activated (in DMA mode).
      -- Corrected GetRxCount to return 0 if receive was not activated (in DMA mode).
      -- Corrected Control function to for abort Send/Transfer wait for already loaded frame to be sent,
         abort also Transmit if Receive in Synchronous Master mode is active,
         enable Tx (implicitly) if Rx is enabled for Synchronous Master mode,
         enable parity error detection if parity usage is configured, use pull-up on Rx pin,
         use pull-up on RTS/CTS pins.
      -- Corrected Tx pin configuration in single-wire mode.
      -- Corrected GetStatus to return all inactive status bits if USART is not powered.
      -- Corrected Interrupt routine with corrected RX Timeout handling, corrected Rx overflow interrupt handling.
         corrected break signal detection, commented that CTS event detection cannot work without flow control,
         corrected Tx Complete signaling.
      -- Corrected Tx DMA Handler Send complete signaling.
      - SPI:
      -- Corrected functionality when using DMA mode.
      -- Corrected PowerControl function to clear transfer info.
      -- Corrected Control function (disable SPI and unconfigure Slave Select pin
         when mode ARM_SPI_MODE_INACTIVE is activated, activate internal pull-up/down on
         SCK pin according to clock/frame format setting, set Slave Select pin to
         inactive state after ARM_SPI_SS_MASTER_SW is activated).
      -- Corrected data lost detection before Reception/Transfer is started.
    </release>
    <release version="2.10.0" date="2022-01-20">
      Updated Pack to STM32Cube_FW_F2 Firmware Package version V1.9.3.
      STM32CubeMX integration:
      - Synchronized versions of generated component ::Device:STM32Cube Framework:STM32CubeMX (in gpdsc) and its bootstrap (in pdsc).
      - Added support for Timebase Source TIMx.
      - Added support for EXTI configurations.
      - Launching STM32CubeMX via "play" button for existing projects overwrites with a new STM32CubeMX project file instead of loading it.
      - MX_Device_h.ftl:
      -- Updated parsing of USART virtual mode.
      -- Updated generation of macros: Added handling for '(' and ')' symbols.
      Package Description (pdsc):
      - Added global define USE_HAL_DRIVER and USE_FULL_LL_DRIVER to the component ::Device:STM32Cube HAL:Common.
      - Changed schemaVersion (1.7.2).
      - Corrected device in board description attribute 'mountedDevice'.
      CMSIS-Driver:
      - CAN:
      -- Corrected SetBitrate function to leave Silent and Loopback mode as they were.
      -- Corrected SetMode function to clear Silent and Loopback mode when NORMAL mode is activated.
      -- Removed macros already provided by cmsis_compiler.h.
      -- Corrected MessageSend function to only access required data for sending.
      - EMAC:
      -- Removed macros already provided by cmsis_compiler.h
      -- ETH DMA initialization is done when MAC transmitter or receiver is enabled (to solve netInitialize/netUnnitialize/netInitialize issue).
      - I2C:
      -- Corrected pins configuration.
      -- Corrected 10-bit addressing mode issues.
      -- Corrected ARM_I2C_EVENT_BUS_CLEAR event signaling.
      -- Replaced dead loop waiting with waiting with timeout.
      - MCI:
      -- Added DMA stream abort when calling PowerControl with ARM_POWER_OFF.
      -- Replaced empty delay loops with _NOP().
      - SPI:
      -- Corrected PowerControl function (to return error if Initialize was
         not called, to abort active transfer if power off was requested).
      -- Updated GetDataCount function to give accurate count in DMA mode.
      -- Corrected Control function (abort in DMA mode,
         software controlled slave select in slave mode, TI Frame Format selection,
         ignore bus speed for slave mode).
      -- Corrected Uninitialize function (to power off the peripheral if it is powered).
      -- Corrected DMA MemDataAlignment configuration.
      -- Added checking if pointer to SPI_PIN is valid, before it is used.
      - USART:
      -- Corrected DMA MemDataAlignment configuration.
      -- Corrected POWER_OFF sequence. DMA is DeInitialized after it is aborted.
      -- Added checking if pointer to USART_PIN is valid, before it is used.
      - USB:
      -- Updated documentation.
      -- Removed macros already provided by cmsis_compiler.h.
      -- HS: OTG_HS ULPI clock disabled in low power if internal PHY is used
         to enable proper operation of OTG_HS port in FS mode during CPU sleep.
      - USB Device:
      -- Updated USBD_EndpointConfigure function to check that maximum packet size requested fits into configured FIFO (compile time configured).
      -- HS Device:
      --- Reduced duration of PowerControl when Power full is activated.
      --- Corrected USBD_PowerControl function not to enable ULPI clock if external PHY is not enabled.
      - USB Host:
      -- Fixed port resume occasionally getting stuck in resume signaling.
      -- Added compile time configuration for reducing Bulk IN NAK rate.
      Examples:
      - Updated Arm Compiler 6 to default compiler.
      - Updated config files to CMSIS 5.8.0.
      - Changed Assembler option to armclang(Auto Select).
      - Overrode default HAL_InitTick function.
      - Terminating app_main thread with osThreadExit() to avoid endless loop.
      - CubeMX:
      -- Migrated CubeMX projects to V6.4.0.
      -- emWin: Changed GUIThread priority from osPriorityIdle to osPriorityNormal.
      - FileSystem, USB: Changed variant selection to "MDK-Plus".
      - Updated all USB Host/Device examples with user templates from MDK-Middleware v7.11.1.
      - Updated MS Windows drivers in USB Device examples.
    </release>
    <release version="2.9.0" date="2018-04-03">
      Increased stm32f2xx_hal_conf.h version to 1.2.1.
      CMSIS-Driver:
      - Added support for Arm Compiler 6.
      - CAN:
      -- Corrected abort message send functionality.
      - SPI:
      -- Made I/O speed configurable.
      -- Corrected data shift register overrun in master mode.
      - USART:
      -- Made I/O speed configurable.
      Board Examples:
      - Updated all examples:
      -- Placing Event Recorder into non-initialized memory area.
      -- Using ARM.CMSIS-Driver.2.2.0.pack and ARM.CMSIS.5.3.0.pack.
      - Added Network SNMP_Agent example.
    </release>
    <release version="2.8.0" date="2018-02-22">
      Updated Pack to STM32Cube_FW_F2 Firmware Package version V1.7.0.
      - Reduced overall pack size by extracting only 'Drivers', 'Documentation' and 'Fonts' from Firmware Library pack.
      - Updated HAL to version V1.2.1.
      - Patching file: stm32f2xx_hal_def.h to support ARM Compiler 6.
      Device Support:
      - Added DBGMCU INI and DBGCONF files.
      - Removed reference to DBGMCU INI files from component startup.
      CMSIS-Driver:
      - CAN:
      -- Corrected comment and code for CubeMX CAN interrupts settings (should be disabled).
      -- Corrected SetBitrate function.
      - EMAC:
      -- Corrected transmit checksum offload for IPv4 fragmented packets.
      - USART:
      -- Corrected ARM_USART_SET_IRDA_PULSE control.
      - USB Device:
      -- Removed CMSIS-RTOS dependency.
      -- Corrected high-bandwidth isochronous endpoint functionality.
      - USB Host:
      -- HS driver: On-chip PHY powered down if external ULPI PHY is used.
      -- Removed CMSIS-RTOS dependency.
      Board Examples:
      - Added USB Device WinUSB_Echo examples.
      - Updated all examples adding release and debug targets, using CMSIS-RTOS2 RTX and enabling the Event Recorder in debug targets.
      - Updated emWin examples to emWin V5.46e.
      - Updated USB Host examples thread stack settings.
      - Updated Board Support LED_*.c files.
      - Removed MCBSTM32F200 board Network examples based on legacy Network API v6.
    </release>
    <release version="2.7.0" date="2017-06-01">
      Based on STMicroelectronics STM32CubeF2 Firmware Package to Version 1.3.0.
      Updated CMSIS drivers:
      - USART: Added "Not Used" support for TX and RX pins
      - SPI:   Added "Not Used" support for MISO and MOSI pins
      - CAN:
      -- Corrected filter setting for adding/removing maskable Standard ID
      -- Corrected clearing of overrun flag in interrupt routine
      -- Corrected CAN2 initialization that was disabling CAN1 filters
      -- Corrected receive overrun signaling
      - I2C:
      -- slave event handling reworked
      -- Corrected rise time setting when using ARM_I2C_BUS_SPEED_FAST
      - USB Device:
      -- HS driver: On-chip PHY powered down if external ULPI PHY is used
      -- Corrected resume event signaling
      -- VBUS sensing enabled by default
      -- VBUS detection is selected automatically based on VBUS sensing pin setting (in RTE_Device.h or by STM32CubeMX)
      -- Corrected initial resume signaling after USB Bus Reset
      -- Corrected device status information
      - USB Host:
      -- HS driver: On-chip PHY powered down if external ULPI PHY is used
      -- Corrected over-current pin configuration
      Updated BSP drivers:
      - Board Touch display: MCBSTM32F200 Touch_STMPE811.c: Corrected occasional incorrect coordinate reading, when touch screen is released.
      Updated examples:
      - Updated emWin examples to emWin V5.36f
      - Updated USB Device CDC ACM VirtualCOM example (corrected initial UART receive size)
      Updated RTE_Device:
      - Added "Not Used" support for SPI MOSI/MISO pins and USART TX/RX pins.
    </release>
    <release version="2.6.0" date="2016-04-14">
      Updated CMSIS drivers:
      - EMAC:
      -- Corrected Ethernet PTP functionality
      - CAN:
      -- Corrected functionality when only one CAN controller is used
      -- Corrected functionality when NULL pointer is provided for one or both signal callbacks in Initialize function call
      - USB Host full-speed:
      -- Removed interrupt priority handling
      - USB Host high-speed:
      -- Added DMA configuration to RTE_Device.h
      -- Corrected wrong result of PipeTransferGetResult for In Pipe transfers in DMA mode
      -- Added check to PipeTransfer function for 4-byte data alignment if DMA is used
      -- Removed interrupt priority handling
      - USART:
      -- Corrected CTS handling and added signal CTS change event.
      Updated examples:
      - Updated emWin examples to emWin V5.32
      - Updated CAN example
      - Updated USB Host examples
      - Updated USB Device CDC ACM VirtualCOM example for Keil MCBSTM32F200 evaluation board
    </release>
    <release version="2.5.0" date="2015-12-08">
      Updated STMicroelectronics STM32CubeF2 Firmware Package to Version 1.3.0.
      - updated affected examples
      MDK-ARM configuration via STM32CubeMX:
      - updated MX_Device.h generation: pin names characters '/', '-', ' ' converted to '_'
      Added examples using Network DualStack (IPv4/IPv6) Middleware targeting MCBSTM32F200 (Keil.MDK-Middleware.7.0.0.pack required)
      Updated all CMSIS drivers:
      - Corrected PowerControl function for Unconditional Power Off
      Updated USB Device CMSIS driver:
      - Updated handling of Isochronous transfer
      Updated USB Host CMSIS drivers:
      - Corrected speed setting in high-speed port for On-chip Full-speed PHY
      - Corrected low-speed device on high-speed port functionality
      - Corrected multiple packet sending and PING functionality
      - Renamed defines for overriding the maximum number of pipes used
      from USBH_MAX_PIPE_NUM to USBH0_MAX_PIPE_NUM in full-speed driver, and
      from USBH_MAX_PIPE_NUM to USBH1_MAX_PIPE_NUM for high-speed driver
      Corrected SPI driver:
      - Corrected 8bit/16bit Data register access, regarding the Data frame size
      Updated CAN driver:
      - added possibility to use only CAN1
      Updated EMAC driver:
      - corrected return value of the ReadFrame function
    </release>
    <release version="2.4.0" date="2015-09-16">
      Introducing MDK-ARM configuration via STM32CubeMX:
      - see documentation for component Device:STM32CubeFramework:STM32CubeMX
      CMSIS driver:
      - added CAN driver and configuration options in RTE_Device.h
      - updated EMAC driver: corrected lockup after long runtime
      - updated MCI driver: corrected clock divider bypass handling
      - updated USART driver: corrected driver incorrectly stopped receiving data when calling the USART_Receive function while the receiver is busy
      - update I2C driver: corrected 3 byte reception and POS bit handling in master mode as well as corrected acknowledge handling in slave mode
      MDK example projects:
      - added examples created using MDK and STM32CubeMX: Blinky and emWin GUI_VNC for Keil MCBSTM32F200
      - added CAN Data and RTR projects for Keil MCBSTM32F200
      - updated FTP_Server example: Heap memory increased
    </release>
    <release version="2.3.0" date="2015-06-12">
      Updated CMSIS drivers:
      - I2C, MCI, EMAC, USB Device, USB Host: Updated initialization, uninitialization and power procedures
      - MCI: Corrected data timeout handling
      - SPI:
      -- Corrected status bit-field handling, to prevent race conditions
      -- Corrected ARM_SPI_EVENT_DATA_LOST event generation in master mode at high bus speeds
      -- Corrected bus speed configuration
      - USART:
      -- Corrected status bit-field handling, to prevent race conditions
      -- Added RX TimeOut handling
      - USB Device: Corrected transferred size during transfer
      - USB Host:
      -- Added pipe bus error signaling of active pipes on port disconnect
      -- Corrected handling on error transfers
      Updated MDK examples:
      - Boards/Keil/MCBSTM32F200/Blinky
      - USB Device Mass Storage Example
    </release>
    <release version="2.2.0" date="2015-03-20">
      Required PACKs: ARM.CMSIS.4.3.0.pack, Keil.MDK-Middleware.6.3.0.pack, Keil.ARM_Compiler.1.0.0.pack
      Updated drivers:
      - USB Host: Corrected signalling of STALL handshake
      - USB Device:
      -- Corrected IN ZLP sending
      -- VBUS sensing disabled if ARM_USBD_VBUS_DETECT is not enabled
      - USART: corrected when configured via STM32CubeMX
      - I2C:
      -- includes corrected when configured with STM32CubeMX
      -- corrected transfer issues after ARM_I2C_EVENT_ADDRESS_NACK
      - MCI:
      -- includes corrected when configured with STM32CubeMX
      -- correction required due to device errata
      -- added support for SD high speed bus mode
      - SPI: corrected spi->info->mode handling
      Updated examples:
      - Compiler I/O software component is now used for I/O retargeting
      - Updated Network examples for MCBSTM32F200 V1.2 board with KSZ8081RNA Ethernet PHY
      Updated dependencies:
      - Ethernet does not require CMSIS:RTOS
    </release>
    <release version="2.1.0" date="2014-12-11">
      Updated drivers:
      - I2C: corrected slave mode and 10-bit addressing mode, I2C2 SDA pin configuration
      - USB Host:
      -- corrected interrupt pipe behaviour, and PING on high-speed driver, init/deinit and power control
      -- added VBUS Power pin active high/low functionality, overcurrent state functionality (without event) added
      - USB Device: prevent simultaneous IN writes to FIFO
      - USART and SPI: corrected DMA transfer abort
      - MCI: corrected setting of bus width
      - EMAC: implemented function 'GetMacAddress'
      - EMAC, I2C, MCI, USART, SPI and USBD: corrected some basic MISRA 2004 compliances like signedness, boolean operation on logical operators
      Updated RTE_Device.h: added Receive and transmit DMA configuration for SDIO peripheral
      Renamed SDIO component in 'Device::STM32Cube HAL' to 'SD' to match HAL component name
      Updated examples:
      - File_Demo and USB Host MassStorage examples updated due to the new fdelete() API in File System Version 6.2
      - MCBSTM32F200 USB Host Keyboard example (removed USB High-speed usage)
      - updated RTE_Device.h to version 2.01
    </release>
    <release version="2.0.0" date="2014-10-16">
      PACK based on STMicroelectronics STM32CubeF2 Firmware Package V1.1.0
      - STD Peripheral Library components removed
      New Device variants introduced matching ST Cube device database
      - e.g. STM32F207IG -> STM32F207IGHx or STM32F207IGTx
      CMSIS Drivers Version 2 (changed Cclass "Drivers" to "CMSIS Driver")
      - Ethernet MAC, I2C, MCI, SPI, USART, USB Device, USB Host
      MDK-ARM Example projects require MDK-Middleware 6.1.1 and CMSIS 4.2.0
      - Board Support uses Board Interface API from MDK-Middleware (header file names changed)
      - Board: Keil MCBSTM32F200
    </release>
    <release version="1.0.8">
      Device: Startup files for GCC added, conditions extended to reflect toolchain dependencies
    </release>
    <release version="1.0.7" date="2014-04-29">
      Updated I2C driver  (BUG Fix: 2 byte reception)
      Device:StdPeriph Drivers:Framework Version:1.1.1 - added file misc.c
    </release>
    <release version="1.0.6">
      Added STM Peripheral Driver Library V1.1.0
    </release>
    <release version="1.0.5">
      Updated I2c driver (corrected register access)
      USB Device drivers update: multiple packet read, EP0 unconfiguration
      Updated SPI driver (IRQ handling corrected)
    </release>
    <release version="1.0.4">
      Updated drivers (namespace prefix ARM_ added)
    </release>
    <release version="1.0.3">
      Added STM32F200 Board Support Bundle
    </release>
    <release version="1.0.2">
      Added emWin Example and GUIDemo for MCBSTM32F200
      Added emWin LCD driver for MCBSTM32F200
      Updated USBH Drivers (improved robustness)
    </release>
    <release version="1.0.1">
      Generic Drivers moved to "Drivers" Class
      Added UART and I2C Driver
      Updated USBD and USBH Drivers
      Added MCBSTM32F200 Demo example
      Added MCBSTM32F200 USB Host Keyboard example
      Added MCBSTM32F200 BSP Drivers: Joystick, Touchscreen, Accelerometer, Gyroscope, Camera
      Updated MCBSTM32F200 BSP Driver: Keyboard
      Updated all MCBSTM32F200 examples
      Minor corrections:
      - SPI Driver
      - DMA Driver
      - MCI Driver
    </release>
    <release version="1.0.0">
      First Release version of STM32F2 Device Family Pack.
    </release>
    <release version="0.9.0">
      Beta version of STM32F2 Device Family Pack.
    </release>
  </releases>

  <keywords>
    <keyword>ST</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package STMicroelectronics</keyword>
    <keyword>STM32F2</keyword>
    <keyword>STM32F2xx</keyword>
  </keywords>

  <devices>
    <family Dfamily="STM32F2 Series" Dvendor="STMicroelectronics:13">
      <processor Dcore="Cortex-M3" DcoreVersion="r2p1" Dfpu="0" Dmpu="1" Dendian="Little-endian"/>

      <book name="https://developer.arm.com/documentation/dui0552/latest" title="Cortex-M3 Generic User Guide"/>

      <description>
The STM32F2 family incorporates high-speed embedded memories and an extensive range of enhanced I/Os and peripherals connected to two APB buses, three AHB buses and a 32-bit multi-AHB bus matrix.
Typical applications include Motor drive and application control Medical equipment, Industrial applications: PLC, inverters, circuit breakers, Printers and scanners, Alarm systems, video intercom, and HVAC, Home audio appliances.

  - Adaptive real-time memory accelerator (ART)
  - LCD parallel interface, 8080/6800 modes
  - Multi-layer bus matrix
  - 5 V-tolerant I/Os
  - Timer with quadrature (incremental) encoder input
  - Parallel camera interface
  - Analog true random number generator
  - 96-bit unique ID
      </description>

      <sequences>
        <!-- Override for Pre-Defined Sequences -->
        <sequence name="DebugDeviceUnlock">
          <block>
            Sequence("CheckID");
          </block>
        </sequence>

        <sequence name="DebugCoreStart">
          <block>
            // Replication of Standard Functionality
            Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
          </block>

          <block info="DbgMCU registers">
            Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
            Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
            Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB2_FZ: Configure APB2 Peripheral Freeze Behavior
          </block>
        </sequence>

        <sequence name="TraceStart">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");                                          // Call TPIU Trace Setup
            </block>
          </control>
        </sequence>

        <sequence name="TraceStop">
          <block>
            // Nothing required for SWO Trace
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO enabled?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // Synchronous trace port enabled?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("DisableTraceSWO");
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("DisableTraceTPIU");
            </block>
          </control>
        </sequence>

        <!-- User-Defined Sequences -->
        <sequence name="CheckID">
          <block>
            __var pidr1 = 0;
            __var pidr2 = 0;
            __var jep106id = 0;
            __var ROMTableBase = 0;

            __ap = 0;      // AHB-AP

            ROMTableBase = ReadAP(0xF8) &amp; ~0x3;

            pidr1 = Read32(ROMTableBase + 0x0FE4);
            pidr2 = Read32(ROMTableBase + 0x0FE8);
            jep106id = ((pidr2 &amp; 0x7) &lt;&lt; 4 ) | ((pidr1 &gt;&gt; 4) &amp; 0xF);
          </block>

          <control if="jep106id != 0x20">
            <block>
              Query(0, "Not a genuine ST Device! Abort connection", 1);
              Message(2, "Not a genuine ST Device! Abort connection.");
            </block>
          </control>
        </sequence>

        <sequence name="EnableTraceSWO">
          <block>
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
            __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value

            dbgmcu_val        = Read32(0xE0042004) &amp; (~0xE0);                         // Read DBGMCU_CR and clear trace setup
            dbgmcu_trace_val  = (1 &lt;&lt; 5);                                           // Trace I/O Enable + Trace Mode Asynchronous

            Sequence("ConfigureTraceSWOPin");
          </block>

          <block info="configure Trace I/O Enable + Trace Mode Asynchronous">
            Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="DisableTraceSWO">
          <block>
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
          </block>

          <block info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
            dbgmcu_val = Read32(0xE0042004) &amp; (~0xE0);                                // Read DBGMCU_CR and clear trace setup
            Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="EnableTraceTPIU">
          <block>
            __var width            = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
            __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value

            dbgmcu_val        = Read32(0xE0042004) &amp; (~0xE0);                         // Read DBGMCU_CR and clear trace setup

            Sequence("ConfigureTraceTPIUPins");
          </block>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <block info="configure Trace I/O Enable + Trace Mode Synchronous 1 bit">
              dbgmcu_trace_val  = (3 &lt;&lt; 5);
            </block>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <block info="configure Trace I/O Enable + Trace Mode Synchronous 2 bit">
              dbgmcu_trace_val  = (5 &lt;&lt; 5);
            </block>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <block info="configure Trace I/O Enable + Trace Mode Synchronous 4 bit">
              dbgmcu_trace_val  = (7 &lt;&lt; 5);
            </block>
          </control>

          <block info="configure Trace I/O Enable + Trace Mode Asynchronous">
            Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="DisableTraceTPIU">
          <block>
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
          </block>

          <block info="unconfigure Trace I/O Enable + Trace Mode Synchronous">
            dbgmcu_val = Read32(0xE0042004) &amp; (~0xE0);                                // Read DBGMCU_CR and clear trace setup
            Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="ConfigureTraceSWOPin">
          <block>
            __var pin     = 0;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var SWO_Pin = 0x00010003;          // PB3
          </block>

            <!-- configure SWO -->
            <block info="configure SWO">
              pin     =               ((SWO_Pin            ) &amp; 0x0000FFFF);
              port    =               ((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF);
              portAdr = 0x40020000 + (((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
        </sequence>

        <sequence name="ConfigureTraceTPIUPins">
          <block>
            __var pin     = 8;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var width   = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
          </block>

            <!-- configure TRACECLK -->
            <block info="configure TRACECLK">
              pin     =                (TraceClk_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <!-- configure TRACED0 -->
            <block info="configure TRACED0">
              pin     =                (TraceD0_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <!-- configure TRACED1 -->
            <block info="configure TRACED1">
              pin     =                (TraceD1_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <!-- configure TRACED2 -->
            <block info="configure TRACED2">
              pin     =                (TraceD2_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

            <!-- configure TRACED3 -->
            <block info="configure TRACED3">
              pin     =                (TraceD3_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>
        </sequence>
      </sequences>

      <feature type="Timer"         n="12"      m="16"/>
      <feature type="Timer"         n="2"       m="32"/>
      <feature type="WDT"           n="2"/>
      <feature type="RTC"           n="32768"/>
      <feature type="DAC"           n="2"       m="12"/>
      <feature type="SPI"           n="3"       m="30000000"/>
      <feature type="I2S"           n="2"/>
      <feature type="USART"         n="4"       m="7500000"/>
      <feature type="UART"          n="2"       m="7500000"/>
      <feature type="USBOTG"        n="1"                           name="USB OTG Full Speed"/>
      <feature type="USBOTG"        n="1"                           name="USB OTG High Speed"/>
      <feature type="CAN"           n="2"/>
      <feature type="SDIO"          n="1"                           name="Secure Digital IO"/>
      <feature type="RNG"           n="1"/>
      <feature type="VCC"           n="1.80"    m="3.60"/>
      <feature type="Temp"          n="-40"     m="85"/>
      <feature type="Temp"          n="-40"     m="105"/>

      <!-- ************************  Subfamily 'STM32F205'  **************************** -->
      <subFamily DsubFamily="STM32F205">
        <processor Dclock="120000000"/>
        <compile  define="STM32F205xx"/>
        <debug svd="CMSIS/SVD/STM32F205.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf" version="1.0.1">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x06E019FF;   // DGBMCU_APB1_FZ: Configure APB1 peripheral freeze behavior
          __var DbgMCU_APB2_Fz = 0x00070003;   // DGBMCU_APB2_FZ: Configure APB2 peripheral freeze behavior
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="https://www.st.com/resource/en/reference_manual/rm0033-stm32f205xx-stm32f207xx-stm32f215xx-and-stm32f217xx-advanced-armbased-32bit-mcus-stmicroelectronics.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="https://www.st.com/resource/en/datasheet/stm32f205rb.pdf" title="STM32F205/207 Data Sheet"/>
        <book name="https://www.st.com/resource/en/errata_sheet/es0005-stm32f205207xx-and-stm32f215217xx-device-limitations-stmicroelectronics.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="3"/>

        <!-- *************************  Device 'STM32F205RB'  ***************************** -->
        <device Dname="STM32F205RB">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00020000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00010000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RBTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RC'  ***************************** -->
        <device Dname="STM32F205RC">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00040000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00018000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RCTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RE'  ***************************** -->
        <device Dname="STM32F205RE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RETx"> <feature type="QFP" n="64"/> </variant>
          <variant Dvariant="STM32F205REYx"> <feature type="CSP" n="66"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RF'  ***************************** -->
        <device Dname="STM32F205RF">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x000C0000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RFTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RG'  ***************************** -->
        <device Dname="STM32F205RG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RGTx"> <feature type="QFP" n="64"/> </variant>
          <variant Dvariant="STM32F205RGYx"> <feature type="CSP" n="66"/> </variant>
		  <variant Dvariant="STM32F205RGEx"> <feature type="CSP" n="66"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VB'  ***************************** -->
        <device Dname="STM32F205VB">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00020000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00010000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VBTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VC'  ***************************** -->
        <device Dname="STM32F205VC">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00040000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00018000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VCTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VE'  ***************************** -->
        <device Dname="STM32F205VE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VF'  ***************************** -->
        <device Dname="STM32F205VF">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x000C0000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VFTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VG'  ***************************** -->
        <device Dname="STM32F205VG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZC'  ***************************** -->
        <device Dname="STM32F205ZC">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00040000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00018000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZCTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZE'  ***************************** -->
        <device Dname="STM32F205ZE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZF'  ***************************** -->
        <device Dname="STM32F205ZF">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x000C0000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZFTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZG'  ***************************** -->
        <device Dname="STM32F205ZG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32F207'  **************************** -->
      <subFamily DsubFamily="STM32F207">
        <processor Dclock="120000000"/>
        <compile  define="STM32F207xx"/>
        <debug svd="CMSIS/SVD/STM32F207.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf" version="1.0.1">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x06E019FF;   // DGBMCU_APB1_FZ: Configure APB1 peripheral freeze behavior
          __var DbgMCU_APB2_Fz = 0x00070003;   // DGBMCU_APB2_FZ: Configure APB2 peripheral freeze behavior
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="https://www.st.com/resource/en/reference_manual/rm0033-stm32f205xx-stm32f207xx-stm32f215xx-and-stm32f217xx-advanced-armbased-32bit-mcus-stmicroelectronics.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="https://www.st.com/resource/en/datasheet/stm32f205rb.pdf" title="STM32F205/207 Data Sheet"/>
        <book name="https://www.st.com/resource/en/errata_sheet/es0005-stm32f205207xx-and-stm32f215217xx-device-limitations-stmicroelectronics.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="2"/>
        <feature type="ETH"           n="1"       m="100000000"/>
        <feature type="ExtBus"        n="16"/>
        <feature type="Camera"        n="14"/>

        <!-- *************************  Device 'STM32F207VC'  ***************************** -->
        <device Dname="STM32F207VC">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00040000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VCTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207VE'  ***************************** -->
        <device Dname="STM32F207VE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207VF'  ***************************** -->
        <device Dname="STM32F207VF">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x000C0000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VFTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207VG'  ***************************** -->
        <device Dname="STM32F207VG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZC'  ***************************** -->
        <device Dname="STM32F207ZC">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00040000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZCTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZE'  ***************************** -->
        <device Dname="STM32F207ZE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZF'  ***************************** -->
        <device Dname="STM32F207ZF">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x000C0000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZFTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZG'  ***************************** -->
        <device Dname="STM32F207ZG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IC'  ***************************** -->
        <device Dname="STM32F207IC">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00040000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207ICTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207ICHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IE'  ***************************** -->
        <device Dname="STM32F207IE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207IETx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207IEHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IF'  ***************************** -->
        <device Dname="STM32F207IF">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x000C0000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207IFTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207IFHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IG'  ***************************** -->
        <device Dname="STM32F207IG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207IGTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207IGHx"> <feature type="BGA" n="176"/> </variant>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32F215'  **************************** -->
      <subFamily DsubFamily="STM32F215">
        <processor Dclock="120000000"/>
        <compile  define="STM32F215xx"/>
        <debug svd="CMSIS/SVD/STM32F215.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf" version="1.0.1">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x06E019FF;   // DGBMCU_APB1_FZ: Configure APB1 peripheral freeze behavior
          __var DbgMCU_APB2_Fz = 0x00070003;   // DGBMCU_APB2_FZ: Configure APB2 peripheral freeze behavior
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="https://www.st.com/resource/en/reference_manual/rm0033-stm32f205xx-stm32f207xx-stm32f215xx-and-stm32f217xx-advanced-armbased-32bit-mcus-stmicroelectronics.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="https://www.st.com/resource/en/datasheet/stm32f215re.pdf" title="STM32F215/217 Data Sheet"/>
        <book name="https://www.st.com/resource/en/errata_sheet/es0005-stm32f205207xx-and-stm32f215217xx-device-limitations-stmicroelectronics.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="3"/>
        <feature type="Crypto"        n="1"                           name="Hardware acceleration for AES 128, 192, 256, Triple DES, HASH (MD5, SHA-1)"/>

        <!-- *************************  Device 'STM32F215RE'  ***************************** -->
        <device Dname="STM32F215RE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F215RETx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215RG'  ***************************** -->
        <device Dname="STM32F215RG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F215RGTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215VE'  ***************************** -->
        <device Dname="STM32F215VE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215VG'  ***************************** -->
        <device Dname="STM32F215VG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215ZE'  ***************************** -->
        <device Dname="STM32F215ZE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215ZG'  ***************************** -->
        <device Dname="STM32F215ZG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32F217'  **************************** -->
      <subFamily DsubFamily="STM32F217">
        <processor Dclock="120000000"/>
        <compile  define="STM32F217xx"/>
        <debug svd="CMSIS/SVD/STM32F217.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf" version="1.0.1">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x06E019FF;   // DGBMCU_APB1_FZ: Configure APB1 peripheral freeze behavior
          __var DbgMCU_APB2_Fz = 0x00070003;   // DGBMCU_APB2_FZ: Configure APB2 peripheral freeze behavior
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="https://www.st.com/resource/en/reference_manual/rm0033-stm32f205xx-stm32f207xx-stm32f215xx-and-stm32f217xx-advanced-armbased-32bit-mcus-stmicroelectronics.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="https://www.st.com/resource/en/datasheet/stm32f215re.pdf" title="STM32F215/217 Data Sheet"/>
        <book name="https://www.st.com/resource/en/errata_sheet/es0005-stm32f205207xx-and-stm32f215217xx-device-limitations-stmicroelectronics.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="3"/>
        <feature type="ETH"           n="1"       m="100000000"/>
        <feature type="Crypto"        n="1"                           name="Hardware acceleration for AES 128, 192, 256, Triple DES, HASH (MD5, SHA-1)"/>
        <feature type="ExtBus"        n="16"/>
        <feature type="Camera"        n="14"/>

        <!-- *************************  Device 'STM32F217VE'  ***************************** -->
        <device Dname="STM32F217VE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F217VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217VG'  ***************************** -->
        <device Dname="STM32F217VG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F217VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217ZE'  ***************************** -->
        <device Dname="STM32F217ZE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F217ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217ZG'  ***************************** -->
        <device Dname="STM32F217ZG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F217ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217IE'  ***************************** -->
        <device Dname="STM32F217IE">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F217IETx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F217IEHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217IG'  ***************************** -->
        <device Dname="STM32F217IG">
          <memory name="Flash" access="rx"                 start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="SRAM"  access="rwx"                start="0x20000000" size="0x00020000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010" default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210" default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F217IGTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F217IGHx"> <feature type="BGA" n="176"/> </variant>
        </device>
      </subFamily>

    </family>

  </devices>

  <conditions>
    <!-- Device Conditions -->
    <condition id="STM32F2">
      <description>STMicroelectronics STM32F2 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32F2*"/>
    </condition>

    <!-- Device + CMSIS Conditions -->
    <condition id="STM32F2 CMSIS">
      <description>STMicroelectronics STM32F2 Device and CMSIS-CORE</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

  </conditions>

  <components>
    <!-- CubeMX Generator -->
    <component generator="CubeMX" Cclass="Device" Cgroup="CubeMX" Cversion="1.0.0" condition="STM32F2 CMSIS">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_CUBE_MX
        #define CMSIS_device_header "stm32f2xx.h"
      </RTE_Components_h>
      <files>
        <file category="doc" name="https://open-cmsis-pack.github.io/cmsis-toolbox/CubeMX/"/>
      </files>
    </component>
  </components>

  <csolution>
    <!-- CubeMX Basic CMSIS Solution template -->
    <template name="CubeMX Basic solution" path="Templates/CubeMX" file="CubeMX.csolution.yml" condition="STM32F2">
      <description>Create a CubeMX basic solution with project</description>
    </template>

  </csolution>
</package>
